# resource
# https://github.com/strapi/strapi-docker/blob/master/examples/prod/docker-compose.yml
version: '3'
services:
  strapi:
    image: strapi/strapi
    environment:
      DATABASE_CLIENT: postgres
      DATABASE_NAME: strapi
      DATABASE_HOST: "webapp:${DATABASE_HOST}"
      DATABASE_PORT: 5432
      DATABASE_USERNAME: "webapp:${DATABASE_USERNAME}"
      DATABASE_PASSWORD: "webapp:${DATABASE_PASSWORD}"
      #   host: env("DATABASE_HOST", process.env.DATABASE_HOST),
      #   port: env.int("DATABASE_PORT", 5432),
      #   database: env("DATABASE_NAME", "strapi"),
      #   user: env("DATABASE_USERNAME", process.env.DATABASE_USERNAME),
      #   password: env("DATABASE_PASSWORD", process.env.DATABASE_PASSWORD),
      #   schema: env('DATABASE_SCHEMA', 'public'), // Not required
      #   ssl: env('DATABASE_SSL', false),
    volumes:
      - ./app:/srv/app
    ports:
      - '1337:1337'
    depends_on:
      - postgres

  postgres:
    image: postgres
    environment:
      POSTGRES_DB: strapi
      POSTGRES_USER: strapi
      POSTGRES_PASSWORD: strapi
    volumes:
      - ./data:/var/lib/postgresql/data

# Pull 
# docker-compose pull

# Running Strapi
# Execute Docker image detaching the terminal
# docker-compose up -d

# Execute Docker image without detaching the terminal
# docker-compose up

